version: "3.7"

services:

  queue:
    image: rabbitmq:3-management
#    hostname: teneo_queue
    ports:
      - "15672:15672"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 30s

  redis:
    command: "redis-server --appendonly yes"
    image: redis:5-alpine
    hostname: teneo_redis
    ports:
      - "6379"
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 30s

  db:
    image: postgres:12-alpine
#    hostname: teneo_db
    environment:
      - POSTGRES_PASSWORD=${DBA_PASS}
      - POSTGRES_USER=${DBA_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 30s

  server:
    image: teneo/server
#    hostname: teneo_server
    networks:
      - frontend
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - bundle-gems:/bundle-gems
      - oracle-client:/oracle-client
    deploy:
      mode: replicated
      replicas: 1

  manager:
    image: teneo/manager
#    hostname: teneo_manager
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - bundle-gems:/bundle-gems
      - oracle-client:/oracle-client
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

networks:
  frontend:
  backend:

volumes:
  db-data:
  bundle-gems:
  oracle-client:
